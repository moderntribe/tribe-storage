name: PHPCS + Unit Tests

on:
  pull_request:
  workflow_dispatch:

jobs:
  phpcs:
    name: Test (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3','7.4']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Validate Composer
        run: composer validate
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Composer install
        run: composer install
      - name: Detect File Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: |
            src:
              - added|modified: 'src/**/*.php'
      - name: PHP CodeSniffer
        if: ${{ steps.filter.outputs.src == 'true' }}
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        run: ./vendor/bin/phpcs ${{ steps.filter.outputs.src_files }}
      - name: Unit testing
        run: ./vendor/bin/phpunit
